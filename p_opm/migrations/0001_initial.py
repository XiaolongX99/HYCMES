# Generated by Django 2.0.4 on 2018-07-09 00:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('p_admin', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('p_pdm', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='correction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='工作日')),
                ('checking', models.BooleanField(default=1, help_text='有效表示当日按实际效率计算绩效，否则按100%计算绩效。', verbose_name='有效计算')),
                ('target', models.DecimalField(blank=True, decimal_places=4, default=100, help_text='若有效计算，并重新按%设定新目标计算。', max_digits=8, null=True, verbose_name='目标调整%')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '314目标调整',
                'verbose_name_plural': '314目标调整',
                'ordering': ['date', 'group', 'jn'],
            },
        ),
        migrations.CreateModel(
            name='group',
            fields=[
                ('groupcode', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='编码')),
                ('groupdesc', models.CharField(max_length=80, verbose_name='群组')),
                ('AMT', models.CharField(choices=[('0', '个人方案'), ('1', '团队方案'), ('2', 'KPI-1方案'), ('3', 'KPI-2方案')], default=1, max_length=40, verbose_name='考核方案')),
                ('YEA', models.CharField(choices=[('2018', '2018年'), ('2019', '2019年'), ('2020', '2020年'), ('2021', '2021年')], default=2018, max_length=10, verbose_name='年份')),
                ('MON', models.CharField(choices=[('1', '1月'), ('2', '2月'), ('3', '3月'), ('4', '4月'), ('5', '5月'), ('6', '6月'), ('7', '7月'), ('8', '8月'), ('9', '9月'), ('10', '10月'), ('11', '11月'), ('12', '12月')], default=7, max_length=10, verbose_name='月份')),
                ('TXR', models.DecimalField(decimal_places=0, default=100, help_text='针对该群组目标值调整比例，幅度：50%-150%', max_digits=4, verbose_name='调整目标百分比(单位:%)')),
                ('TXD', models.DecimalField(decimal_places=2, default=0, help_text='针对该群组人均绩效调整金额，幅度：+/-200元', max_digits=8, verbose_name='调整基数金额(单位:元)')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '303绩效群组',
                'verbose_name_plural': '303绩效群组',
            },
        ),
        migrations.CreateModel(
            name='idlecode',
            fields=[
                ('code', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='闲置代码')),
                ('category', models.CharField(choices=[('1', '材料问题'), ('2', '设备问题'), ('3', '品质问题'), ('4', '良率问题'), ('5', '人员问题'), ('6', '计划问题'), ('0', '其它问题')], max_length=40, verbose_name='闲置分类')),
                ('idledesc', models.TextField(null=True, verbose_name='闲置说明')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('responder', models.ForeignKey(blank=True, help_text='选择人员后，发生此项异常时，系统自动通知回应者', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='Responderuser', to=settings.AUTH_USER_MODEL, verbose_name='回应者')),
            ],
            options={
                'verbose_name': '310闲置代码',
                'verbose_name_plural': '310闲置代码',
                'ordering': ['category', 'code'],
            },
        ),
        migrations.CreateModel(
            name='idlehour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='工作日期')),
                ('idlehours', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='闲置工时(单位：分钟)')),
                ('idledesc', models.TextField(blank=True, null=True, verbose_name='说明')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='groupid', to='p_opm.group', verbose_name='绩效群组')),
                ('idlecode', models.ForeignKey(max_length=40, on_delete=django.db.models.deletion.DO_NOTHING, to='p_opm.idlecode', verbose_name='闲置代码')),
            ],
            options={
                'verbose_name': '312闲置工时',
                'verbose_name_plural': '312闲置工时',
                'ordering': ['date', 'group', 'jn', 'idlecode'],
            },
        ),
        migrations.CreateModel(
            name='index',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('KPI', models.CharField(max_length=40, verbose_name='KPI方案')),
                ('kcode', models.CharField(max_length=40, verbose_name='KPI项目')),
                ('Kdescription', models.CharField(max_length=120, verbose_name='KPI说明')),
                ('kmax', models.DecimalField(decimal_places=2, default=100, max_digits=8, verbose_name='最大分')),
                ('kmin', models.DecimalField(decimal_places=2, default=-100, max_digits=8, verbose_name='最小分')),
                ('kbase', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='基础分')),
                ('kcriteria', models.DecimalField(decimal_places=2, default=-10, max_digits=8, verbose_name='计分值')),
                ('kgrade', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='目标值')),
                ('kjudge', models.CharField(choices=[('Less', '取小'), ('More', '取大')], default='More', max_length=10, verbose_name='取大或取小')),
                ('revision', models.CharField(max_length=40, verbose_name='方案版本')),
                ('states', models.BooleanField(default=1, verbose_name='有效')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '307KPI项目',
                'verbose_name_plural': '307KPI项目',
                'ordering': ['KPI', 'kcode', 'revision'],
            },
        ),
        migrations.CreateModel(
            name='KPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('KPI', models.CharField(max_length=40, unique=True, verbose_name='KPI方案')),
                ('kpidesc', models.TextField(blank=True, null=True, verbose_name='方案说明')),
                ('releasedate', models.DateField(default=django.utils.timezone.now, verbose_name='生效日期')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('kpiindex', models.ManyToManyField(blank=True, null=True, to='p_opm.index', verbose_name='KPI考核项目')),
            ],
            options={
                'verbose_name': '306KPI方案',
                'verbose_name_plural': '306KPI方案',
            },
        ),
        migrations.CreateModel(
            name='org',
            fields=[
                ('jn', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, related_name='orgjn', serialize=False, to='p_admin.organization', verbose_name='工号')),
                ('states', models.BooleanField(default=1, verbose_name='有效')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('cell', models.ForeignKey(blank=True, limit_choices_to={'category': 'C'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='orgcell', to='p_admin.department', verbose_name='Cell')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='orggroup', to='p_opm.group', verbose_name='绩效群组')),
                ('operation', models.ForeignKey(blank=True, limit_choices_to={'category': '2'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='orgoperation', to='p_pdm.operation', verbose_name='工作中心')),
            ],
            options={
                'verbose_name': '302生产人员',
                'verbose_name_plural': '302生产人员',
                'ordering': ['cell', 'jn'],
            },
        ),
        migrations.CreateModel(
            name='output',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='工作日')),
                ('item', models.CharField(help_text='输入料号或料号群码', max_length=60, verbose_name='完工项目')),
                ('pcode', models.CharField(help_text='输入工作制程', max_length=60, verbose_name='完工制程')),
                ('qty', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='完工数量')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('cell', models.ForeignKey(limit_choices_to={'category': 'C'}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rcpcell', to='p_admin.department', verbose_name='Cell')),
                ('dep', models.ForeignKey(limit_choices_to={'category': 'P'}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rcppl', to='p_admin.department', verbose_name='部门')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rcpgroup', to='p_opm.group', verbose_name='绩效群组')),
                ('jn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='rcptor', to='p_opm.org', verbose_name='人员工号')),
            ],
            options={
                'verbose_name': '313人员产出',
                'verbose_name_plural': '313人员产出',
                'ordering': ['date', 'dep', 'cell', 'group'],
            },
        ),
        migrations.CreateModel(
            name='perkpi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='工作日')),
                ('amount', models.DecimalField(decimal_places=4, max_digits=8, null=True, verbose_name='KPI量化数值')),
                ('pertext', models.TextField(blank=True, null=True, verbose_name='说明')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='pkpigg', to='p_opm.group', verbose_name='绩效群组')),
                ('jn', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pkpijng', to='p_opm.org', verbose_name='人员工号')),
                ('kpi', models.ForeignKey(limit_choices_to={'states': 1}, on_delete=django.db.models.deletion.DO_NOTHING, to='p_opm.index', verbose_name='KPI')),
            ],
            options={
                'verbose_name': '315KPI量化',
                'verbose_name_plural': '315KPI量化',
                'ordering': ['date', 'group', 'jn'],
            },
        ),
        migrations.CreateModel(
            name='projectitem',
            fields=[
                ('ProjectCode', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='编码')),
                ('ProjectItem', models.CharField(max_length=120, verbose_name='名称')),
                ('category', models.CharField(choices=[('1', '1.系统集成'), ('2', '2.流程再造'), ('3', '3.任务执行'), ('4', '4.新产品开发'), ('5', '5.现场改造'), ('6', '6.制程改进'), ('0', '0.其它')], default='3', max_length=20, verbose_name='分类')),
                ('ProjectTarget', models.TextField(blank=True, null=True, verbose_name='目标')),
                ('ProjectValue', models.TextField(blank=True, null=True, verbose_name='效益')),
                ('StartDate', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='启动日期')),
                ('EndDate', models.DateField(blank=True, null=True, verbose_name='结案日期')),
                ('ProjectVersion', models.CharField(default='A01', max_length=20, verbose_name='版本')),
                ('States', models.CharField(choices=[('1', '1.启动'), ('2', '2.规划'), ('3', '3.实施'), ('4', '4.监控'), ('5', '5.收尾'), ('9', '关闭'), ('0', '取消')], default='1', max_length=40, verbose_name='状态')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '316项目管理',
                'verbose_name_plural': '316项目管理',
            },
        ),
        migrations.CreateModel(
            name='projectRev',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProjectCode', models.CharField(max_length=20, verbose_name='编码')),
                ('ProjectItem', models.CharField(max_length=120, verbose_name='名称')),
                ('ProjectTarget', models.TextField(blank=True, null=True, verbose_name='目标')),
                ('ProjectValue', models.TextField(blank=True, null=True, verbose_name='效益评估')),
                ('EndDate', models.DateField(blank=True, default=django.utils.timezone.now, null=True, verbose_name='结案日期')),
                ('ProjectVersion', models.CharField(default='A01', max_length=20, verbose_name='版本')),
                ('States', models.CharField(max_length=40, verbose_name='项目状态')),
                ('Remark', models.TextField(blank=True, null=True, verbose_name='项目阶段说明')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修订时间')),
            ],
            options={
                'verbose_name': '317项目记录',
                'verbose_name_plural': '317项目记录',
            },
        ),
        migrations.CreateModel(
            name='skill',
            fields=[
                ('skillcode', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='技能代码')),
                ('skilldesc', models.TextField(blank=True, null=True, verbose_name='技能说明')),
                ('allowance', models.DecimalField(decimal_places=0, default=0, help_text='针对作业员技能/岗位的补贴，幅度：0-300元', max_digits=4, verbose_name='技能津贴(单位:元)')),
                ('kvalue', models.DecimalField(decimal_places=4, default='1', help_text='新人训练完成后，速度可达的单支工时数。', max_digits=8, verbose_name='K值')),
                ('nvalue', models.DecimalField(decimal_places=4, default='-0.2', help_text='学习曲线y=kx^n，学习速度指数n（数值如-0.1，-0.2，-0.3，-0.4，-0.5）', max_digits=8, verbose_name='n值')),
                ('states', models.BooleanField(default=1, verbose_name='有效')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('operation', models.ManyToManyField(blank=True, related_name='skillpcode', to='p_pdm.pcode', verbose_name='含括制程')),
            ],
            options={
                'verbose_name': '301岗位技能',
                'verbose_name_plural': '301岗位技能',
                'ordering': ['skillcode'],
            },
        ),
        migrations.CreateModel(
            name='SLG',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SLP', models.CharField(max_length=40, unique=True, verbose_name='SLP方案')),
                ('slpdesc', models.TextField(blank=True, null=True, verbose_name='方案说明')),
                ('releasedate', models.DateField(default=django.utils.timezone.now, verbose_name='生效日期')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '304SLP方案',
                'verbose_name_plural': '304SLP方案',
            },
        ),
        migrations.CreateModel(
            name='SLGFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('SLP', models.CharField(max_length=40, verbose_name='SLP方案')),
                ('level', models.IntegerField(verbose_name='等级')),
                ('UPPH', models.DecimalField(decimal_places=2, help_text='3等级设置100，其余等级按阶梯设置，如1：64，2：80，3：100，4：120，5：144', max_digits=8, verbose_name='等级标准(UPPH)')),
                ('Grade', models.DecimalField(decimal_places=2, help_text='UPPH达到起点后才开始计算绩效奖金', max_digits=8, verbose_name='激励标准(UPPH)')),
                ('hourlyrate', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='小时工资率(HourlyRate)')),
                ('compensate', models.IntegerField(help_text='达到激励起点后才开始计算绩效奖金', verbose_name='等级激励(￥)')),
                ('incentivestr', models.DecimalField(decimal_places=4, help_text='扣除等级奖金后，超产每小时还需要分给人员奖金', max_digits=8, verbose_name='激励强度(￥)')),
                ('incentivedist', models.DecimalField(decimal_places=4, help_text='超产部份按时薪比例分配奖金给人员，计算公式=(激励强度+单位等级激励)/时薪', max_digits=8, verbose_name='激励分配比(%)')),
                ('dayhours', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='日工时数(时/天/人)')),
                ('monthdays', models.IntegerField(verbose_name='月工作天数(天/月/人)')),
                ('basesalary', models.IntegerField(verbose_name='基本底薪(￥)')),
                ('revision', models.CharField(max_length=40, verbose_name='方案版本')),
                ('states', models.BooleanField(default=1, verbose_name='有效')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
            ],
            options={
                'verbose_name': '305SLP框架',
                'verbose_name_plural': '305SLP框架',
                'ordering': ['SLP', 'level', 'revision'],
            },
        ),
        migrations.CreateModel(
            name='SLGMaster',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('YEA', models.CharField(choices=[('2017', '2017年'), ('2018', '2018年'), ('2019', '2019年'), ('2020', '2020年'), ('2021', '2021年')], default=2018, max_length=10, verbose_name='年份')),
                ('MON', models.CharField(choices=[('1', '1月'), ('2', '2月'), ('3', '3月'), ('4', '4月'), ('5', '5月'), ('6', '6月'), ('7', '7月'), ('8', '8月'), ('9', '9月'), ('10', '10月'), ('11', '11月'), ('12', '12月')], default=7, max_length=10, verbose_name='月份')),
                ('states', models.BooleanField(default=1, help_text='是否准许更新本期人员绩效考核有关数据', verbose_name='有效')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('AXD', models.ManyToManyField(blank=True, null=True, to='p_admin.axisdate', verbose_name='考核日期')),
                ('dep', models.ForeignKey(limit_choices_to={'category': 'P'}, on_delete=django.db.models.deletion.DO_NOTHING, related_name='plmaster', to='p_admin.department', verbose_name='部门')),
            ],
            options={
                'verbose_name': '309考核周期',
                'verbose_name_plural': '309考核周期',
                'ordering': ['YEA', 'MON', 'dep'],
            },
        ),
        migrations.CreateModel(
            name='ST',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item', models.CharField(max_length=60, verbose_name='项目')),
                ('labor', models.DecimalField(decimal_places=0, max_digits=8, verbose_name='标准工时(单位：秒)')),
                ('enable', models.DateField(default=django.utils.timezone.now, verbose_name='生效日期')),
                ('deadline', models.DateField(blank=True, help_text='在此日期后标准将失效', null=True, verbose_name='失效日期')),
                ('revise', models.DecimalField(decimal_places=2, default=100, help_text='值大于100，则按IE标准再加宽放计算绩效', max_digits=8, verbose_name='标准修正比%)')),
                ('port', models.BooleanField(default=1, verbose_name='按头数计算')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('pcode', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='p_pdm.pcode', verbose_name='制程')),
            ],
            options={
                'verbose_name': '308产出标准',
                'verbose_name_plural': '308产出标准',
                'ordering': ['item', 'pcode', 'enable'],
            },
        ),
        migrations.CreateModel(
            name='workinghour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='出勤日期')),
                ('workinghours', models.DecimalField(decimal_places=2, default=660.0, max_digits=8, verbose_name='出勤工时(单位：分钟)')),
                ('ADM', models.CharField(blank=True, max_length=120, null=True, verbose_name='说明')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='创建时间')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orggroupwk', to='p_opm.group', verbose_name='绩效群组')),
                ('jn', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='orgjnwk', to='p_opm.org', verbose_name='人员工号')),
            ],
            options={
                'verbose_name': '311出勤工时',
                'verbose_name_plural': '311出勤工时',
                'ordering': ['date', 'group', 'jn'],
            },
        ),
        migrations.CreateModel(
            name='projectManage',
            fields=[
                ('ProjectCode', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='p_opm.projectitem', verbose_name='项目')),
                ('dim1', models.SmallIntegerField(default='0', help_text='0-2, 与公司/部门目标无相关性：0，与公司/部门目标间接相关：1，与公司/部门目标有直接相关：2。', verbose_name='重要性')),
                ('dim2', models.SmallIntegerField(default='0', help_text='0-2, 影响个人：0，部门内影响：1，跨部门影响：2。', verbose_name='影响范围')),
                ('dim3', models.SmallIntegerField(default='0', help_text='0-1, 有SOP:0，无SOP首次进行的工作：1。', verbose_name='实施方法')),
                ('dim4', models.SmallIntegerField(default='0', help_text='0-2, 无任何标准化动作：0，只有部份规范文件：1，输出SOP文件并对人员培训等：2。', verbose_name='标准化')),
                ('dim5', models.SmallIntegerField(default='0', help_text='0-2, 未完成：0，延迟完成：1，按时完成：2。', verbose_name='时效性')),
                ('dim6', models.SmallIntegerField(default='0', help_text='0-1,无报告无数据记录：0，有报告有数据记录：1。', verbose_name='报告记录')),
                ('dim7', models.SmallIntegerField(default='0', help_text='评分计算 = 困难度(重要性+影响范围+实施方法) X 成效度(标准化+时效性+报告记录) ', verbose_name='总评分')),
                ('updatetime', models.DateTimeField(default=django.utils.timezone.now, verbose_name='修订时间')),
            ],
            options={
                'verbose_name': '318项目评价',
                'verbose_name_plural': '318项目评价',
            },
        ),
        migrations.AlterUniqueTogether(
            name='slgframe',
            unique_together={('SLP', 'level', 'revision')},
        ),
        migrations.AddField(
            model_name='slg',
            name='frame',
            field=models.ManyToManyField(blank=True, null=True, to='p_opm.SLGFrame', verbose_name='绩效框架'),
        ),
        migrations.AlterUniqueTogether(
            name='projectrev',
            unique_together={('ProjectCode', 'ProjectVersion')},
        ),
        migrations.AddField(
            model_name='projectitem',
            name='Dep',
            field=models.ManyToManyField(blank=True, null=True, related_name='projectitem', to='p_admin.department', verbose_name='范围'),
        ),
        migrations.AddField(
            model_name='projectitem',
            name='ParentCode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parentcode', to='p_opm.projectitem', verbose_name='来源'),
        ),
        migrations.AddField(
            model_name='projectitem',
            name='ProjectLeader',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='ProjectLeader', to=settings.AUTH_USER_MODEL, verbose_name='负责'),
        ),
        migrations.AddField(
            model_name='projectitem',
            name='ProjectMember',
            field=models.ManyToManyField(blank=True, null=True, related_name='ProjectMember', to=settings.AUTH_USER_MODEL, verbose_name='成员'),
        ),
        migrations.AddField(
            model_name='org',
            name='skill',
            field=models.ManyToManyField(blank=True, null=True, to='p_opm.skill', verbose_name='人员技能'),
        ),
        migrations.AlterUniqueTogether(
            name='index',
            unique_together={('KPI', 'kcode', 'revision')},
        ),
        migrations.AddField(
            model_name='idlehour',
            name='jn',
            field=models.ForeignKey(blank=True, help_text='若不需要细分，人员可以不记录', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='idleorg', to='p_opm.org', verbose_name='人员工号'),
        ),
        migrations.AddField(
            model_name='group',
            name='KPI',
            field=models.ForeignKey(blank=True, help_text='关键绩效指标方案', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='p_opm.KPI', verbose_name='KPI'),
        ),
        migrations.AddField(
            model_name='group',
            name='SLP',
            field=models.ForeignKey(blank=True, help_text='技能等级绩效方案', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='p_opm.SLG', verbose_name='SLP'),
        ),
        migrations.AddField(
            model_name='group',
            name='cell',
            field=models.ManyToManyField(blank=True, limit_choices_to={'category': 'C'}, null=True, to='p_admin.department', verbose_name='所属线别'),
        ),
        migrations.AddField(
            model_name='group',
            name='dep',
            field=models.ForeignKey(blank=True, limit_choices_to={'category': 'P'}, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='groupdep', to='p_admin.department', verbose_name='部门'),
        ),
        migrations.AddField(
            model_name='group',
            name='jn',
            field=models.ManyToManyField(blank=True, null=True, through='p_opm.org', to='p_admin.organization', verbose_name='人员'),
        ),
        migrations.AddField(
            model_name='correction',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='corgroupg', to='p_opm.group', verbose_name='绩效群组'),
        ),
        migrations.AddField(
            model_name='correction',
            name='jn',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='corjnorg', to='p_opm.org', verbose_name='人员工号'),
        ),
        migrations.AlterUniqueTogether(
            name='workinghour',
            unique_together={('date', 'group', 'jn')},
        ),
        migrations.AlterUniqueTogether(
            name='st',
            unique_together={('item', 'pcode', 'enable')},
        ),
        migrations.AlterUniqueTogether(
            name='slgmaster',
            unique_together={('dep', 'YEA', 'MON')},
        ),
        migrations.AlterUniqueTogether(
            name='perkpi',
            unique_together={('date', 'group', 'jn')},
        ),
        migrations.AlterUniqueTogether(
            name='output',
            unique_together={('date', 'item', 'pcode', 'group', 'jn')},
        ),
        migrations.AlterUniqueTogether(
            name='idlehour',
            unique_together={('date', 'group', 'jn', 'idlecode')},
        ),
        migrations.AlterUniqueTogether(
            name='correction',
            unique_together={('date', 'group', 'jn')},
        ),
    ]
